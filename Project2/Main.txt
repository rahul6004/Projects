Code checkout
Run tests
Compile the code
Run Sonarqube analysis on the code
Push the image to Docker Hub
Pull and run the image on local system

- Docker and Docker compose
- Jenkins and Jenkins pipeline
- SonarQube
- DockerHub

Ec2(2VCPUs, 4GB) â€” Docker and Docker-compose
  2 container one Jenkins and another one is SonarQube
DockerHub account

for more details follow below link:
https://hakdogan.medium.com/an-end-to-end-tutorial-to-continuous-integration-and-continuous-delivery-by-dockerize-jenkins-f5b9b45b610d

1.Launch t2.medium ubuntu instance
2. connect and install Docker & Docker-compose
apt install docker.io
apt install docker-compose

3. clone https://github.com/hakdogan/jenkins-pipeline.git
    git clone https://github.com/hakdogan/jenkins-pipeline.git

4. need to launch Jenkins & SonarQube containers

  if we go to folder called jenkins-pipeline we can see 
   docker-compose.ym file in that file we will nuild Jenkins & SonarQube images and run as containers
    
  for Sonarqube there is folder called sonarqube
  for Jenkins there is folder called jenkins

  in jenkins folder update latest image(get it from hub.docker.com search jenkins) in Dockerfile
    cd jenkins-pipeline
    vi jenkins/Dockerfile
      FROM jenkins/jenkins:lts-jdk11 
 
   : wq! (save & quit)
   
    
    vi sonarqube/Dockerfile
    FROM sonarqube:6.7-alpine
    : wq! (save & quit)


now you can check to conatainer 
#docker ps

goto browser and access Jenkins and sonarqube using docker host ip
http://<docker host ip>:8080
http://<docker host ip>:9000

login to jenkins 
install docker plugin
add credentials for DockerHub account
go to manage jenkins --> manage tools --> add maven and Docker --> save
create job with type pipeline  -- use the github url https://github.com/hakdogan/jenkins-pipeline.git
and save 

then run the job


